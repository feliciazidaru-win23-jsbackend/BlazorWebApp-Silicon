@page "/Account/Notifications"
@using BlazorWebApp.Components.Account.Shared
@rendermode InteractiveServer
@layout ManageLayout
@attribute [StreamRendering]

<div class="content">
    <div class="password-form">
        <h2 class="title">Notifications</h2>

        @if (!string.IsNullOrEmpty(statusMessage))
        {
            <div class="errormessage">
                @statusMessage
            </div>
        }

        <EditForm FormName="subscribe" Model="SubscribeForm" OnValidSubmit="OnSave" method="post" novalidate>
            <div class="email-input">
                <label>Email</label>
                <InputText @bind-Value="SubscribeForm.Email" />
            </div>

            <div class="buttons">
                <button type="button" class="button btn-theme" @onclick="OnToggleSubscribe">Toggle Subscription</button>
     
            </div>
        </EditForm>
    </div>
</div>

@code {
    private string? statusMessage;

    public SubscribeFormModel SubscribeForm { get; set; } = new SubscribeFormModel();

    public class SubscribeFormModel
    {
        [EmailAddress]
        [Required(ErrorMessage = "You must enter an email address")]
        [Display(Name = "Email address", Prompt = "Your email")]
        public string Email { get; set; } = null!;
    }

  

    private async Task OnToggleSubscribe()
    {
        try
        {
            HttpResponseMessage result;

            result = await Http.PostAsJsonAsync("https://newsletter-provider-silicon.azurewebsites.net/api/GetSubscriber?code=gwHAAkFs1djblNFn3oXxxd-XzZVID-wV-jgeUYEFvLLcAzFuzj-Hng%3D%3D", new { SubscribeForm.Email });
            var isSubscribed = result.IsSuccessStatusCode;

            if (isSubscribed)
            {
                result = await Http.PostAsJsonAsync("https://newsletter-provider-silicon.azurewebsites.net/api/Unsubscribe?code=zf5rwvFTS7ewAcRyAPj97-lHdsWacAbiKqeEeD0E2HSiAzFunz_L0w%3D%3D", SubscribeForm);
                statusMessage = "Unsubscribed from newsletter!";
            }
            else
            {
                result = await Http.PostAsJsonAsync("https://newsletter-provider-silicon.azurewebsites.net/api/Subscribe?code=Eg8p8-8RCxObyOKhLh5Ze-fCcajP3OjpeMGCs0mSIy3qAzFupV2WQQ%3D%3D", SubscribeForm);
                if (result.IsSuccessStatusCode)
                {
                    statusMessage = "Subscribed to newsletter!";
                }
                else
                {
                    statusMessage = "You are already subscribed!";
                }
            }

            if (!result.IsSuccessStatusCode)
            {
                statusMessage = "Unable to update subscription status! Try again!";
            }
        }
        catch
        {
            statusMessage = "Unable to update subscription status! Try again!";
        }
    }

    private async Task OnSave()
    {
        try
        {
          
            statusMessage = "Form details saved successfully!";
        }
        catch
        {
            statusMessage = "Unable to save form details! Try again!";
        }
    }
}
